[{"path":"/articles/using-latex2exp.html","id":"usage","dir":"Articles","previous_headings":"","what":"Usage","title":"Using latex2exp","text":"TeX function takes LaTeX string, parses , returns closest plotmath expression suitable use graphics. return value TeX() can used anywhere plotmath expression accepted, including plot labels, legends, text base graphics ggplot2. ’s simple example: Since R 4.0, recommended use new raw string literal syntax (see ?Quotes). syntax looks like r\"(...)\", ... can contain character sequence, including \\. Another option escape backslash character (\\) LaTeX commands, command written \\\\command rather \\command. also work versions R older 4.0: can quickly preview translated LaTeX string look like using plot:  following example shows plotting base graphics:  example shows plotting ggplot2:  examples can latex2exp:","code":"# Use raw strings, no need to escape backslashes. TeX(r\"(\\textbf{Euler's identity} is $e^{i\\pi} + 1 = 0$.)\") # Equivalent to the previous code fragment. # Use regular strings, but escape the backslashes. TeX(\"\\\\textbf{Euler's identity} is $e^{i\\\\pi} + 1 = 0$.\") plot(TeX(r'(A $\\LaTeX$ formula: $\\frac{2hc^2}{\\lambda^5}\\frac{1}{e^{\\frac{hc}{\\lambda k_B T}} - 1}$)'), cex=2, main=\"\") x <- seq(0, 4, length.out=100) alpha <- 1:5  plot(x, xlim=c(0, 4), ylim=c(0, 10),       xlab='x', ylab=TeX(r'($\\alpha  x^\\alpha$, where $\\alpha \\in \\{1 \\ldots 5\\}$)'),       type='n', main=TeX(r'(Using $\\LaTeX$ for plotting in base graphics!)', bold=TRUE))  for (a in alpha) {   lines(x, a*x^a, col=a) }  legend('topleft',         legend=TeX(sprintf(r'($\\alpha = %d$)', alpha)),         lwd=1,         col=alpha) x <- seq(0, 4, length.out=100) alpha <- 1:5 data <- map_df(alpha, ~ tibble(v=.*x^., x=x, alpha=.))  p <- ggplot(data, aes(x=x, y=v, color=as.factor(alpha))) +     geom_line() +      ylab(TeX(r'($\\alpha  x^\\alpha$, where $\\alpha \\in 1\\ldots 5$)')) +     ggtitle(TeX(r'(Using $\\LaTeX$ for plotting in ggplot2. I $\\heartsuit$ ggplot!)')) +     coord_cartesian(ylim=c(-1, 10)) +     guides(color=guide_legend(title=NULL)) +     scale_color_discrete(labels=lapply(sprintf(r'($\\alpha = %d$)', alpha), TeX))      # Note that ggplot2 legend labels must be lists of expressions, not vectors of expressions  print(p) latex2exp_examples(cex=0.9)"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Stefano Meschiari. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Meschiari S (2022). latex2exp: Use LaTeX Expressions Plots. https://stefano-meschiari.github.io/latex2exp, https://github.com/stefano-meschiari/latex2exp.","code":"@Manual{,   title = {latex2exp: Use LaTeX Expressions in Plots},   author = {Stefano Meschiari},   year = {2022},   note = {https://stefano-meschiari.github.io/latex2exp, https://github.com/stefano-meschiari/latex2exp}, }"},{"path":[]},{"path":"/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Use LaTeX Expressions in Plots","text":"latex2exp R package parses converts LaTeX R’s custom plotmath expressions. can read full documentation package’s website. Expressions returned latex2exp can used create formatted text mathematical formulas symbols rendered axis labels, annotations, legends, titles, etc. throughout R’s plotting system.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Use LaTeX Expressions in Plots","text":"Install package CRAN: can also install development version GitHub using devtools:","code":"install.packages('latex2exp') devtools::install_github('stefano-meschiari/latex2exp')"},{"path":"/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Use LaTeX Expressions in Plots","text":"TeX function takes LaTeX string, parses , returns closest plotmath expression suitable use graphics. return value TeX() can used anywhere plotmath expression accepted, including plot labels, legends, text base graphics ggplot2. ’s simple example: Since R 4.0, recommended use new raw string literal syntax (see ?Quotes). syntax looks like r\"(...)\", ... can contain character sequence, including \\. Another option escape backslash character (\\) LaTeX commands, command written \\\\command rather \\command. also work versions R older 4.0: can quickly preview translated LaTeX string look like using plot:  following example shows plotting base graphics:  example shows plotting ggplot2:  examples can latex2exp:","code":"# Use raw strings, no need to escape backslashes. TeX(r\"(\\textbf{Euler's identity} is $e^{i\\pi} + 1 = 0$.)\") # Equivalent to the previous code fragment. # Use regular strings, but escape the backslashes. TeX(\"\\\\textbf{Euler's identity} is $e^{i\\\\pi} + 1 = 0$.\") plot(TeX(r'(A $\\LaTeX$ formula: $\\frac{2hc^2}{\\lambda^5}\\frac{1}{e^{\\frac{hc}{\\lambda k_B T}} - 1}$)'), cex=2, main=\"\") x <- seq(0, 4, length.out=100) alpha <- 1:5  plot(x, xlim=c(0, 4), ylim=c(0, 10),       xlab='x', ylab=TeX(r'($\\alpha  x^\\alpha$, where $\\alpha \\in \\{1 \\ldots 5\\}$)'),       type='n', main=TeX(r'(Using $\\LaTeX$ for plotting in base graphics!)', bold=TRUE))  for (a in alpha) {   lines(x, a*x^a, col=a) }  legend('topleft',         legend=TeX(sprintf(r'($\\alpha = %d$)', alpha)),         lwd=1,         col=alpha) x <- seq(0, 4, length.out=100) alpha <- 1:5 data <- map_df(alpha, ~ tibble(v=.*x^., x=x, alpha=.))  p <- ggplot(data, aes(x=x, y=v, color=as.factor(alpha))) +     geom_line() +      ylab(TeX(r'($\\alpha  x^\\alpha$, where $\\alpha \\in 1\\ldots 5$)')) +     ggtitle(TeX(r'(Using $\\LaTeX$ for plotting in ggplot2. I $\\heartsuit$ ggplot!)')) +     coord_cartesian(ylim=c(-1, 10)) +     guides(color=guide_legend(title=NULL)) +     scale_color_discrete(labels=lapply(sprintf(r'($\\alpha = %d$)', alpha), TeX))      # Note that ggplot2 legend labels must be lists of expressions, not vectors of expressions  print(p) latex2exp_examples(cex=0.9)"},{"path":"/reference/TeX.html","id":null,"dir":"Reference","previous_headings":"","what":"Converts LaTeX to a plotmath expression. — TeX","title":"Converts LaTeX to a plotmath expression. — TeX","text":"TeX converts string comprising LaTeX commands (math equation) plotmath expression. Plotmath expressions can used throught R's graphic system represent formatted text equations.","code":""},{"path":"/reference/TeX.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Converts LaTeX to a plotmath expression. — TeX","text":"","code":"TeX(   input,   bold = FALSE,   italic = FALSE,   user_defined = list(),   output = c(\"expression\", \"character\", \"ast\") )"},{"path":"/reference/TeX.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Converts LaTeX to a plotmath expression. — TeX","text":"input character vector containing LaTeX strings.  Note backslashes must escaped (e.g. \"$\\alpha\"). bold Whether make entire label bold italic Whether make entire label italic user_defined Described \"Adding New Commands\" section. output returned object, one \"expression\" (default, returns  plotmath expression ready plotting),  \"character\" (returns expression string),  \"ast\" (returns tree used generate expression).","code":""},{"path":"/reference/TeX.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Converts LaTeX to a plotmath expression. — TeX","text":"Returns plotmath expression default. output parameter can  modify type returned value.  one string specified input parameter, returns list expressions.","code":""},{"path":"/reference/TeX.html","id":"adding-new-commands","dir":"Reference","previous_headings":"","what":"Adding new commands","title":"Converts LaTeX to a plotmath expression. — TeX","text":"New LaTeX commands can defined supplying user_defined parameter. user_defined parameter list contains LaTeX commands names, template strings values. LaTeX command matches one names translated corresponding string included final plotmath expression. file symbols.R source code package contains one table can used reference. template string can include one following special template parameters: $arg1, $arg2, ... represent first, second, ... brace argument.   E.g. \\frac{x}{y}, $arg1 x $arg2 y. $opt optional argument square brackets. E.g.   \\sqrt[2]{x}, $opt 2. $sub $sup arguments exponent (^) subscript (_)   following current expression. E.g. \\sum^{x}, $sup x. $LEFT $RIGHT substituted previous following LaTeX expression    relative current token. See Examples section example using user_defined option.","code":""},{"path":"/reference/TeX.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Converts LaTeX to a plotmath expression. — TeX","text":"","code":"TeX(\"$\\\\alpha$\") # plots the greek alpha character #>    LaTeX: $\\alpha$  #> plotmath: alpha  TeX(\"The ratio of 1 and 2 is $\\\\frac{1}{2}$\") #>    LaTeX: The ratio of 1 and 2 is $\\frac{1}{2}$  #> plotmath: 'The ratio of 1 and 2 is '*frac(1, 2)   a <- 1:100 plot(a, a^2, xlab=TeX(\"$\\\\alpha$\"), ylab=TeX(\"$\\\\alpha^2$\"))   # create a \\variance command that takes a single argument TeX(\"$\\\\variance{X} = 10$\", user_defined=list(\"\\\\variance\"=\"sigma[$arg1]^2\")) #>    LaTeX: $\\variance{X} = 10$  #> plotmath: sigma[X]^2 * {phantom() == phantom()} * 10"},{"path":"/reference/latex2exp.html","id":null,"dir":"Reference","previous_headings":"","what":"Deprecated; use TeX instead. — latex2exp","title":"Deprecated; use TeX instead. — latex2exp","text":"Deprecated; use TeX instead.","code":""},{"path":"/reference/latex2exp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deprecated; use TeX instead. — latex2exp","text":"","code":"latex2exp(string, output = c(\"expression\", \"character\", \"ast\"))"},{"path":"/reference/latex2exp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Deprecated; use TeX instead. — latex2exp","text":"string character vector containing LaTeX expressions. Note backslashes must escaped (e.g. \"$\\alpha\"). output returned object, one \"expression\" (default, returns plotmath expression ready plotting), \"character\" (returns expression string), \"ast\" (returns tree used generate expression).","code":""},{"path":"/reference/latex2exp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Deprecated; use TeX instead. — latex2exp","text":"Returns expression (see output parameter).","code":""},{"path":"/reference/latex2exp_examples.html","id":null,"dir":"Reference","previous_headings":"","what":"latex2exp Examples — latex2exp_examples","title":"latex2exp Examples — latex2exp_examples","text":"Plots number example LaTeX string, parsed  TeX.","code":""},{"path":"/reference/latex2exp_examples.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"latex2exp Examples — latex2exp_examples","text":"","code":"latex2exp_examples(cex = 1)"},{"path":"/reference/latex2exp_examples.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"latex2exp Examples — latex2exp_examples","text":"cex Multiplier font size","code":""},{"path":"/reference/latex2exp_supported.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns the list of supported LaTeX commands. — latex2exp_supported","title":"Returns the list of supported LaTeX commands. — latex2exp_supported","text":"show TRUE, also show searchable table symbols.","code":""},{"path":"/reference/latex2exp_supported.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns the list of supported LaTeX commands. — latex2exp_supported","text":"","code":"latex2exp_supported(show = FALSE, ...)"},{"path":"/reference/latex2exp_supported.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns the list of supported LaTeX commands. — latex2exp_supported","text":"show Show searchable table symbols ... parameters (used)","code":""},{"path":"/reference/latex2exp_supported.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns the list of supported LaTeX commands. — latex2exp_supported","text":"data frame containing table supported LaTeX commands.","code":""},{"path":"/reference/plot.expression.html","id":null,"dir":"Reference","previous_headings":"","what":"Previews a LaTeX equation — plot.expression","title":"Previews a LaTeX equation — plot.expression","text":"Plots result call [TeX] current graphical device. useful preview output placing plot.","code":""},{"path":"/reference/plot.expression.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Previews a LaTeX equation — plot.expression","text":"","code":"# S3 method for expression plot(x, ..., main = NULL)"},{"path":"/reference/plot.expression.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Previews a LaTeX equation — plot.expression","text":"x plotmath expression returned TeX. ... Parameters passed text function. main Title plot","code":""},{"path":"/reference/plot.expression.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Previews a LaTeX equation — plot.expression","text":"","code":"plot(TeX(\"Example equation: $a \\\\geq b$\"))"},{"path":"/reference/print.latexexpression.html","id":null,"dir":"Reference","previous_headings":"","what":"Print an expression returned by TeX() — print.latexexpression","title":"Print an expression returned by TeX() — print.latexexpression","text":"Prints plotmath expression generated TeX original TeX string.","code":""},{"path":"/reference/print.latexexpression.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print an expression returned by TeX() — print.latexexpression","text":"","code":"# S3 method for latexexpression print(x, ...)"},{"path":"/reference/print.latexexpression.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print an expression returned by TeX() — print.latexexpression","text":"x Object print ... Ignored","code":""},{"path":"/reference/print.latextoken2.html","id":null,"dir":"Reference","previous_headings":"","what":"Prints out a parsed LaTeX object, as returned by TeX(..., output='ast').\nThis is primarily used for debugging. — print.latextoken2","title":"Prints out a parsed LaTeX object, as returned by TeX(..., output='ast').\nThis is primarily used for debugging. — print.latextoken2","text":"Prints parsed LaTeX object, returned TeX(..., output='ast'). primarily used debugging.","code":""},{"path":"/reference/print.latextoken2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prints out a parsed LaTeX object, as returned by TeX(..., output='ast').\nThis is primarily used for debugging. — print.latextoken2","text":"","code":"# S3 method for latextoken2 print(x, depth = 0, ...)"},{"path":"/reference/print.latextoken2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prints out a parsed LaTeX object, as returned by TeX(..., output='ast').\nThis is primarily used for debugging. — print.latextoken2","text":"x object depth Increases padding recursing parsed structure ... (Ignored)","code":""}]
